{"ast":null,"code":"import _defineProperty from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/App.js\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider } from \"@react-pdf/renderer\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"; // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\";\nimport data from \"./data/data.js\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport { PdfThemeContext } from \"./hooks/usePdfTheme\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState } from \"react\";\nimport { createContext, useContext } from \"react\";\n\nvar App = function App() {\n  var _useState = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var onChange = function onChange(event) {\n    setTheme(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, event.target.name, event.target.value));\n    });\n    console.log(\"theme:\", theme);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PdfThemeContext.Provider, {\n    value: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlobProvider, {\n    document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var blob = _ref.blob,\n        url = _ref.url,\n        loading = _ref.loading,\n        error = _ref.error;\n\n    if (blob) {\n      return /*#__PURE__*/React.createElement(Container, {\n        fluid: \"xxl\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ControlPanel, {\n        data: data,\n        onChange: onChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PSPDFKit, {\n        blob: blob,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      }))));\n    }\n\n    if (error) {\n      return error;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }\n    }, \"The PDF is rendering...\");\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/App.js"],"names":["React","ReactDOM","BlobProvider","Container","Row","Col","PSPDFKit","ColsOneToOne","data","ControlPanel","PdfThemeContext","useState","createContext","useContext","App","primary","teranry","secondary","textLight","textDark","link","theme","setTheme","onChange","event","prevState","target","name","value","console","log","blob","url","loading","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACUH,QAAQ,CAAC;AACjCI,IAAAA,OAAO,EAAE,SADwB;AAEjCC,IAAAA,OAAO,EAAE,SAFwB;AAGjCC,IAAAA,SAAS,EAAE,SAHsB;AAIjCC,IAAAA,SAAS,EAAE,SAJsB;AAKjCC,IAAAA,QAAQ,EAAE,SALuB;AAMjCC,IAAAA,IAAI,EAAE;AAN2B,GAAD,CADlB;AAAA;AAAA,MACTC,KADS;AAAA,MACFC,QADE;;AAUhB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBF,IAAAA,QAAQ,CAAC,UAAAG,SAAS;AAAA,+BACbA,SADa,sBAEfD,KAAK,CAACE,MAAN,CAAaC,IAFE,EAEKH,KAAK,CAACE,MAAN,CAAaE,KAFlB;AAAA,KAAV,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,KAAtB;AACD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEb,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAmC;AAAA,QAAhCuB,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,GAA0B,QAA1BA,GAA0B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AAClC,QAAIH,IAAJ,EAAU;AACR,0BACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAEvB,IAApB;AAA0B,QAAA,QAAQ,EAAEe,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEQ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,CADF;AAYD;;AACD,QAAIG,KAAJ,EAAW;AACT,aAAOA,KAAP;AACD;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD,GArBH,CADF,CADF,CADF;AA6BD,CA/CD;;AAiDA,eAAepB,GAAf","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider } from \"@react-pdf/renderer\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\n// import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\"\nimport data from \"./data/data.js\"\nimport ControlPanel from \"./components/control/ControlPanel\"\nimport { PdfThemeContext } from \"./hooks/usePdfTheme\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { useState } from \"react\"\nimport { createContext, useContext } from \"react\"\n\nconst App = () => {\n  const [theme, setTheme] = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\",\n  })\n\n  const onChange = event => {\n    setTheme(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }))\n    console.log(\"theme:\", theme)\n  }\n\n  return (\n    <div>\n      <PdfThemeContext.Provider value={theme}>\n        <BlobProvider document={<ColsOneToOne data={data} />}>\n          {({ blob, url, loading, error }) => {\n            if (blob) {\n              return (\n                <Container fluid=\"xxl\">\n                  <Row>\n                    <Col>\n                      <ControlPanel data={data} onChange={onChange} />\n                    </Col>\n                    <Col>\n                      <PSPDFKit blob={blob} />\n                    </Col>\n                  </Row>\n                </Container>\n              )\n            }\n            if (error) {\n              return error\n            }\n\n            return <div>The PDF is rendering...</div>\n          }}\n        </BlobProvider>\n      </PdfThemeContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}