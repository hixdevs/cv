{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider, PDFDownloadLink } from \"@react-pdf/renderer\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"; // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\";\nimport data from \"./data/data.js\";\nimport ControlPanel from \"../src/components/pdf/ControlPanel\";\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\";\nimport DownloadPdf from \"./components/pdf/Download\";\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(DownloadPdf, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(PDFDownloadLink, {\n  document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }),\n  fileName: \"name.pdf\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, function (_ref) {\n  var blob = _ref.blob,\n      url = _ref.url,\n      loading = _ref.loading,\n      error = _ref.error;\n  return loading ? \"Loading document...\" : \"Download now!\";\n}), /*#__PURE__*/React.createElement(PdfThemeContext.Provider, {\n  value: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BlobProvider, {\n  document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, function (_ref2) {\n  var blob = _ref2.blob,\n      url = _ref2.url,\n      loading = _ref2.loading,\n      error = _ref2.error;\n  console.log(\"url:\", url);\n\n  if (blob) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ControlPanel, {\n      blob: blob,\n      url: url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PSPDFKit, {\n      blob: blob,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (error) {\n    return error;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }\n  }, \"The PDF is rendering...\");\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","ReactDOM","BlobProvider","PDFDownloadLink","PSPDFKit","ColsOneToOne","data","ControlPanel","PdfThemeContext","theme","DownloadPdf","render","blob","url","loading","error","console","log","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,qBAAvC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEAT,QAAQ,CAACU,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,eAAD;AACE,EAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEL,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ;AAEE,EAAA,QAAQ,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIG;AAAA,MAAGM,IAAH,QAAGA,IAAH;AAAA,MAASC,GAAT,QAASA,GAAT;AAAA,MAAcC,OAAd,QAAcA,OAAd;AAAA,MAAuBC,KAAvB,QAAuBA,KAAvB;AAAA,SACCD,OAAO,GAAG,qBAAH,GAA2B,eADnC;AAAA,CAJH,CAFF,eAWE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,EAAA,KAAK,EAAEL,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,iBAAmC;AAAA,MAAhCM,IAAgC,SAAhCA,IAAgC;AAAA,MAA1BC,GAA0B,SAA1BA,GAA0B;AAAA,MAArBC,OAAqB,SAArBA,OAAqB;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,GAApB;;AAEA,MAAID,IAAJ,EAAU;AACR,wBACE,uDACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AACD,MAAIG,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,CAjBH,CADF,CAXF,CADF,EAkCEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAlCF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider, PDFDownloadLink } from \"@react-pdf/renderer\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\n// import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\"\nimport data from \"./data/data.js\"\nimport ControlPanel from \"../src/components/pdf/ControlPanel\"\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\"\nimport DownloadPdf from \"./components/pdf/Download\"\n\nReactDOM.render(\n  <div>\n    <DownloadPdf />\n    <PDFDownloadLink\n      document={<ColsOneToOne data={data} />}\n      fileName=\"name.pdf\"\n    >\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n\n    <PdfThemeContext.Provider value={theme}>\n      <BlobProvider document={<ColsOneToOne data={data} />}>\n        {({ blob, url, loading, error }) => {\n          console.log(\"url:\", url)\n\n          if (blob) {\n            return (\n              <>\n                <ControlPanel blob={blob} url={url} />\n                <PSPDFKit blob={blob} />\n              </>\n            )\n          }\n          if (error) {\n            return error\n          }\n\n          return <div>The PDF is rendering...</div>\n        }}\n      </BlobProvider>\n    </PdfThemeContext.Provider>\n  </div>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}