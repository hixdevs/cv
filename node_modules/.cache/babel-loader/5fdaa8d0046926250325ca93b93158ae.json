{"ast":null,"code":"import _defineProperty from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js\";\n\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport InputColor from \"../input/Color\";\nimport { inputs } from \"../../../lib/colors\";\nimport { useState } from \"react\";\n\nvar FormColors = function FormColors() {\n  var _useState = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  var onChange = function onChange(event) {\n    setColors(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  var theme = _objectSpread({}, colors);\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, inputs.map(function (input, idx) {\n    return /*#__PURE__*/React.createElement(InputColor, {\n      key: idx,\n      name: input.name,\n      defaultValue: input.default,\n      label: input.display,\n      onChange: onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default FormColors;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js"],"names":["React","Form","InputColor","inputs","useState","FormColors","primary","teranry","secondary","textLight","textDark","link","colors","setColors","onChange","event","prevState","target","name","value","theme","map","input","idx","default","display"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACKD,QAAQ,CAAC;AACnCE,IAAAA,OAAO,EAAE,SAD0B;AAEnCC,IAAAA,OAAO,EAAE,SAF0B;AAGnCC,IAAAA,SAAS,EAAE,SAHwB;AAInCC,IAAAA,SAAS,EAAE,SAJwB;AAKnCC,IAAAA,QAAQ,EAAE,SALyB;AAMnCC,IAAAA,IAAI,EAAE;AAN6B,GAAD,CADb;AAAA;AAAA,MAChBC,MADgB;AAAA,MACRC,SADQ;;AAUvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBF,IAAAA,SAAS,CAAC,UAAAG,SAAS;AAAA,+BACdA,SADc,sBAEhBD,KAAK,CAACE,MAAN,CAAaC,IAFG,EAEIH,KAAK,CAACE,MAAN,CAAaE,KAFjB;AAAA,KAAV,CAAT;AAID,GALD;;AAOA,MAAMC,KAAK,qBAAQR,MAAR,CAAX;;AACA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,CAACkB,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR;AAAA,wBACV,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAED,KAAK,CAACJ,IAFd;AAGE,MAAA,YAAY,EAAEI,KAAK,CAACE,OAHtB;AAIE,MAAA,KAAK,EAAEF,KAAK,CAACG,OAJf;AAKE,MAAA,QAAQ,EAAEX,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF;AAaD,CA/BD;;AAiCA,eAAeT,UAAf","sourcesContent":["import React from \"react\"\nimport { Form } from \"react-bootstrap\"\nimport InputColor from \"../input/Color\"\nimport { inputs } from \"../../../lib/colors\"\nimport { useState } from \"react\"\n\nconst FormColors = () => {\n  const [colors, setColors] = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\",\n  })\n\n  const onChange = event => {\n    setColors(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const theme = { ...colors }\n  return (\n    <Form>\n      {inputs.map((input, idx) => (\n        <InputColor\n          key={idx}\n          name={input.name}\n          defaultValue={input.default}\n          label={input.display}\n          onChange={onChange}\n        />\n      ))}\n    </Form>\n  )\n}\n\nexport default FormColors\n"]},"metadata":{},"sourceType":"module"}