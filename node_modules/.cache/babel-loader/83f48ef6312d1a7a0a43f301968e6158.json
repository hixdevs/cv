{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx\";\n\nimport { Text, View } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport createStyles from \"../../styles/pdf/Education\";\nimport { format } from \"date-fns\";\nimport usePdfTheme from \"../../hooks/usePdfTheme\";\n\nvar Education = function Education(_ref) {\n  var data = _ref.data;\n  console.log(\"data:\", data);\n\n  var formatDate = function formatDate(date) {\n    return format(new Date(date), [\"yyyy\"]);\n  };\n\n  var theme = usePdfTheme();\n  var styles = createStyles(theme);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, data.map(function (school, idx) {\n    return /*#__PURE__*/React.createElement(View, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, school.school), /*#__PURE__*/React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, school.faculty), /*#__PURE__*/React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, school.degrees.map(function (degree, idx) {\n      return /*#__PURE__*/React.createElement(View, {\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }\n      }, degree.degree), /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      }, \"\".concat(degree.years.start, \" - \").concat(degree.years.end)), /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }, degree.specialization));\n    })));\n  })));\n};\n\nexport default Education;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx"],"names":["Text","View","React","createStyles","format","usePdfTheme","Education","data","console","log","formatDate","date","Date","theme","styles","container","heading","map","school","idx","faculty","degrees","degree","years","start","end","specialization"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;;AAEA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WAAIP,MAAM,CAAC,IAAIQ,IAAJ,CAASD,IAAT,CAAD,EAAiB,CAAC,MAAD,CAAjB,CAAV;AAAA,GAAvB;;AACA,MAAME,KAAK,GAAGR,WAAW,EAAzB;AACA,MAAMS,MAAM,GAAGX,YAAY,CAACU,KAAD,CAA3B;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,CAACU,GAAL,CAAS,UAACC,MAAD,EAASC,GAAT;AAAA,wBACR,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,MAAM,CAACA,MAAd,CAFF,eAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,MAAM,CAACE,OAAd,CAHF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACG,OAAP,CAAeJ,GAAf,CAAmB,UAACK,MAAD,EAASH,GAAT;AAAA,0BAClB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOG,MAAM,CAACA,MAAd,CADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUA,MAAM,CAACC,KAAP,CAAaC,KAAvB,gBAAkCF,MAAM,CAACC,KAAP,CAAaE,GAA/C,EAFF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,MAAM,CAACI,cAAd,CAJF,CADkB;AAAA,KAAnB,CADH,CAJF,CADQ;AAAA,GAAT,CADH,CAFF,CADF;AA6CD,CAnDD;;AAqDA,eAAepB,SAAf","sourcesContent":["import { Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport createStyles from \"../../styles/pdf/Education\"\nimport { format } from \"date-fns\"\nimport usePdfTheme from \"../../hooks/usePdfTheme\"\n\nconst Education = ({ data }) => {\n  console.log(\"data:\", data)\n\n  const formatDate = date => format(new Date(date), [\"yyyy\"])\n  const theme = usePdfTheme()\n  const styles = createStyles(theme)\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Education</Text>\n      <View>\n        {data.map((school, idx) => (\n          <View key={idx}>\n            {/* <View style={styles.header}> */}\n            <Text>{school.school}</Text>\n            <Text>{school.faculty}</Text>\n            <View>\n              {school.degrees.map((degree, idx) => (\n                <View key={idx}>\n                  <Text>{degree.degree}</Text>\n                  <Text>{`${degree.years.start} - ${degree.years.end}`}</Text>\n\n                  <Text>{degree.specialization}</Text>\n                </View>\n              ))}\n            </View>\n            {/* </View> */}\n          </View>\n        ))}\n      </View>\n      {/* <View>\n        {data.map((school, idx) => (\n          <View key={idx}>\n            <View style={styles.header}>\n              <Text style={styles.school}>{school.school}</Text>\n              <Text style={styles.years}>{`${formatDate(\n                school.years.start,\n              )} - ${\n                school.years.end === \"now\"\n                  ? \"Now\"\n                  : formatDate(school.years.end)\n              }`}</Text>\n            </View>\n            <Text\n              style={styles.description}\n            >{`${school.degree} of ${school.faculty}`}</Text>\n            <Text>{`Specialization - ${school.specialization}`}</Text>\n          </View>\n        ))}\n      </View> */}\n    </View>\n  )\n}\n\nexport default Education\n"]},"metadata":{},"sourceType":"module"}