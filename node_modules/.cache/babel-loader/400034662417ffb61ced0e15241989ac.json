{"ast":null,"code":"import _objectSpread from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js\";\n\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport InputColor from \"../input/Color\";\nimport { colors } from \"../../../lib/colors\";\nimport { useState } from \"react\";\n\nvar FormColors = function FormColors() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theme = _useState4[0],\n      setTheme = _useState4[1]; // console.log(\"theme:\", theme)\n  // console.log(\"color:\", color)\n\n\n  var onChange = function onChange(event) {\n    setColor(event.target.value);\n    setTheme(function (prev) {\n      var obj = _defineProperty({}, name, event.target.value);\n\n      return _objectSpread({}, prev, obj);\n    });\n    console.log(\"theme\", theme);\n  }; // const [inputColor, setInputColor] = useState()\n  // colors.map(color => {\n  //   console.log(inputColor)\n  // })\n  // const [theme, setTheme] = useState({\n  //   // primary: \"#42413e\",\n  //   // teranry: \"#fafafa\",\n  //   // secondary: \"#c4ad93\",\n  //   // textLight: \"#ffffff\",\n  //   // textDark: \"#222222\",\n  //   // link: \"#54b2ff\",\n  // })\n  // // console.log(\"theme:\", theme)\n  // // console.log(\"color:\", color)\n  // const onChange = event => {\n  //   console.log(\"event:\", event)\n  //   setInputColor(event.target.value)\n  //   // colors.map()\n  //   setTheme(colors.map(color => (theme[color.name] = event.target.value)))\n  //   console.log(\"theme\", theme)\n  //   // setTheme(theme => ({ ...theme, \"primary\": {event.target.value} }))\n  //   // console.log(\n  //   // colors.map(color => setTheme((theme[color.name] = event.target.value))),\n  //   // )\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, colors.map(function (color, idx) {\n    return /*#__PURE__*/React.createElement(InputColor, {\n      key: idx,\n      name: color.name,\n      defaultValue: color.default,\n      display: color.display,\n      colors: colors,\n      onChange: onChange,\n      value: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default FormColors;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js"],"names":["React","Form","InputColor","colors","useState","FormColors","color","setColor","theme","setTheme","onChange","event","target","value","prev","obj","name","console","log","map","idx","default","display"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACGD,QAAQ,EADX;AAAA;AAAA,MAChBE,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEGH,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAEhBI,KAFgB;AAAA,MAETC,QAFS,kBAIvB;AACA;;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AAEAJ,IAAAA,QAAQ,CAAC,UAAAK,IAAI,EAAI;AACf,UAAIC,GAAG,uBAAMC,IAAN,EAAaL,KAAK,CAACC,MAAN,CAAaC,KAA1B,CAAP;;AACA,+BACKC,IADL,EAEKC,GAFL;AAID,KANO,CAAR;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,KAArB;AACD,GAXD,CAPuB,CAmBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACgB,GAAP,CAAW,UAACb,KAAD,EAAQc,GAAR;AAAA,wBACV,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAEd,KAAK,CAACU,IAFd;AAGE,MAAA,YAAY,EAAEV,KAAK,CAACe,OAHtB;AAIE,MAAA,OAAO,EAAEf,KAAK,CAACgB,OAJjB;AAKE,MAAA,MAAM,EAAEnB,MALV;AAME,MAAA,QAAQ,EAAEO,QANZ;AAOE,MAAA,KAAK,EAAEJ,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF;AAeD,CAjED;;AAmEA,eAAeD,UAAf","sourcesContent":["import React from \"react\"\nimport { Form } from \"react-bootstrap\"\nimport InputColor from \"../input/Color\"\nimport { colors } from \"../../../lib/colors\"\nimport { useState } from \"react\"\n\nconst FormColors = () => {\n  const [color, setColor] = useState()\n  const [theme, setTheme] = useState({})\n\n  // console.log(\"theme:\", theme)\n  // console.log(\"color:\", color)\n\n  const onChange = event => {\n    setColor(event.target.value)\n\n    setTheme(prev => {\n      let obj = { [name]: event.target.value }\n      return {\n        ...prev,\n        ...obj,\n      }\n    })\n    console.log(\"theme\", theme)\n  }\n  // const [inputColor, setInputColor] = useState()\n  // colors.map(color => {\n  //   console.log(inputColor)\n  // })\n  // const [theme, setTheme] = useState({\n  //   // primary: \"#42413e\",\n  //   // teranry: \"#fafafa\",\n  //   // secondary: \"#c4ad93\",\n  //   // textLight: \"#ffffff\",\n  //   // textDark: \"#222222\",\n  //   // link: \"#54b2ff\",\n  // })\n\n  // // console.log(\"theme:\", theme)\n  // // console.log(\"color:\", color)\n\n  // const onChange = event => {\n  //   console.log(\"event:\", event)\n\n  //   setInputColor(event.target.value)\n\n  //   // colors.map()\n  //   setTheme(colors.map(color => (theme[color.name] = event.target.value)))\n\n  //   console.log(\"theme\", theme)\n  //   // setTheme(theme => ({ ...theme, \"primary\": {event.target.value} }))\n  //   // console.log(\n  //   // colors.map(color => setTheme((theme[color.name] = event.target.value))),\n  //   // )\n  // }\n\n  return (\n    <Form>\n      {colors.map((color, idx) => (\n        <InputColor\n          key={idx}\n          name={color.name}\n          defaultValue={color.default}\n          display={color.display}\n          colors={colors}\n          onChange={onChange}\n          value={color}\n        />\n      ))}\n    </Form>\n  )\n}\n\nexport default FormColors\n"]},"metadata":{},"sourceType":"module"}