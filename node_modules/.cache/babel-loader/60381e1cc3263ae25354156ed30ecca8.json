{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Download.jsx\";\n\nimport React from \"react\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport ColsOneToOne from \"src/styles/pdf/ColsOneToOne\";\n\nvar DownloadPdf = function DownloadPdf() {\n  return /*#__PURE__*/React.createElement(PDFDownloadLink, {\n    document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }),\n    fileName: \"name.pdf\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var blob = _ref.blob,\n        url = _ref.url,\n        loading = _ref.loading,\n        error = _ref.error;\n    return loading ? \"Loading document...\" : \"Download now!\";\n  });\n};\n\nexport default DownloadPdf;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Download.jsx"],"names":["React","PDFDownloadLink","ColsOneToOne","DownloadPdf","data","blob","url","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,sBACE,oBAAC,eAAD;AACE,IAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEE,IAAA,QAAQ,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,GAAT,QAASA,GAAT;AAAA,QAAcC,OAAd,QAAcA,OAAd;AAAA,QAAuBC,KAAvB,QAAuBA,KAAvB;AAAA,WACCD,OAAO,GAAG,qBAAH,GAA2B,eADnC;AAAA,GAJH,CADF;AAUD,CAXD;;AAaA,eAAeJ,WAAf","sourcesContent":["import React from \"react\"\nimport { PDFDownloadLink } from \"@react-pdf/renderer\"\nimport ColsOneToOne from \"src/styles/pdf/ColsOneToOne\"\n\nconst DownloadPdf = () => {\n  return (\n    <PDFDownloadLink\n      document={<ColsOneToOne data={data} />}\n      fileName=\"name.pdf\"\n    >\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  )\n}\n\nexport default DownloadPdf\n"]},"metadata":{},"sourceType":"module"}