{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Experience.jsx\";\n\nimport { View, Text, Link } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport createStyles from \"../../styles/pdf/Experience\";\nimport List, { Item } from \"./List\";\nimport { format } from \"date-fns\";\nimport usePdfTheme from \"../../hooks/usePdfTheme\";\n\nvar Experience = function Experience(_ref) {\n  var data = _ref.data;\n  data.sort(function (a, b) {\n    return a.positions.map(function (position) {\n      return position.years.start;\n    }) < b.positions.map(function (position) {\n      return position.years.start;\n    }) ? 1 : -1;\n  });\n\n  var formatDate = function formatDate(date) {\n    return format(new Date(date), [\"MMM yyyy\"]);\n  };\n\n  var theme = usePdfTheme();\n  var styles = createStyles(theme);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Experience\"), /*#__PURE__*/React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, data.map(function (job, idx) {\n    return /*#__PURE__*/React.createElement(View, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, job.link ? /*#__PURE__*/React.createElement(Link, {\n      style: styles.companyLink,\n      href: job.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, job.company) : /*#__PURE__*/React.createElement(Text, {\n      style: styles.companyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, job.company), job.positions.map(function (position, idx) {\n      return /*#__PURE__*/React.createElement(View, {\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, position.title), /*#__PURE__*/React.createElement(Text, {\n        style: styles.years,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, \"\".concat(formatDate(position.years.start), \" - \").concat(position.years.end === \"now\" ? \"Now\" : formatDate(position.years.end)))), /*#__PURE__*/React.createElement(View, {\n        style: styles.paragraph,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, position.topParagraph)), /*#__PURE__*/React.createElement(List, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, position.tasks.map(function (task, idx) {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, task);\n      })), /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, position.bottomParagraph));\n    }));\n  })));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Experience.jsx"],"names":["View","Text","Link","React","createStyles","List","Item","format","usePdfTheme","Experience","data","sort","a","b","positions","map","position","years","start","formatDate","date","Date","theme","styles","container","heading","job","idx","link","companyLink","company","companyText","header","title","end","paragraph","topParagraph","tasks","task","bottomParagraph"],"mappings":"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","sourcesContent":["import { View, Text, Link } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport createStyles from \"../../styles/pdf/Experience\"\nimport List, { Item } from \"./List\"\nimport { format } from \"date-fns\"\nimport usePdfTheme from \"../../hooks/usePdfTheme\"\n\nconst Experience = ({ data }) => {\n  data.sort((a, b) =>\n    a.positions.map(position => position.years.start) <\n    b.positions.map(position => position.years.start)\n      ? 1\n      : -1,\n  )\n  const formatDate = date => format(new Date(date), [\"MMM yyyy\"])\n  const theme = usePdfTheme()\n  const styles = createStyles(theme)\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Experience</Text>\n      <View>\n        {data.map((job, idx) => (\n          <View key={idx}>\n            {job.link ? (\n              <Link style={styles.companyLink} href={job.link}>\n                {job.company}\n              </Link>\n            ) : (\n              <Text style={styles.companyText}>{job.company}</Text>\n            )}\n            {job.positions.map((position, idx) => (\n              <View key={idx}>\n                <View style={styles.header}>\n                  <Text style={styles.title}>{position.title}</Text>\n                  <Text style={styles.years}>{`${formatDate(\n                    position.years.start,\n                  )} - ${\n                    position.years.end === \"now\"\n                      ? \"Now\"\n                      : formatDate(position.years.end)\n                  }`}</Text>\n                </View>\n                <View style={styles.paragraph}>\n                  <Text>{position.topParagraph}</Text>\n                </View>\n                <List>\n                  {position.tasks.map((task, idx) => (\n                    <Item key={idx}>{task}</Item>\n                  ))}\n                </List>\n                <Text>{position.bottomParagraph}</Text>\n              </View>\n            ))}\n          </View>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nexport default Experience\n"]},"metadata":{},"sourceType":"module"}