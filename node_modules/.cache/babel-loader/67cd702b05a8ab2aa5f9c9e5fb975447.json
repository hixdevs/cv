{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx\";\n\nimport { Text, View } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport createStyles from \"../../styles/pdf/Education\";\nimport { format } from \"date-fns\";\nimport usePdfTheme from \"../../hooks/usePdfTheme\";\n\nvar Education = function Education(_ref) {\n  var data = _ref.data;\n\n  var formatDate = function formatDate(date) {\n    return format(new Date(date), [\"yyyy\"]);\n  };\n\n  var theme = usePdfTheme();\n  var styles = createStyles(theme);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, data.map(function (school, idx) {\n    return /*#__PURE__*/React.createElement(View, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.school,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, school.school), /*#__PURE__*/React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, school.degrees.map(function (degree, idx) {\n      return /*#__PURE__*/React.createElement(View, {\n        key: idx,\n        style: {\n          marginBottom: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, \" \".concat(school.faculty, \" - \").concat(degree.degree)), /*#__PURE__*/React.createElement(Text, {\n        style: styles.years,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"\".concat(formatDate(degree.years.start), \" - \").concat(degree.years.end === \"now\" ? \"Now\" : formatDate(degree.years.end)))), /*#__PURE__*/React.createElement(Text, {\n        style: styles.description,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, degree.specialization ? \"Specialization - \".concat(degree.specialization) : null));\n    })));\n  })));\n};\n\nexport default Education;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx"],"names":["Text","View","React","createStyles","format","usePdfTheme","Education","data","formatDate","date","Date","theme","styles","container","heading","map","school","idx","degrees","degree","marginBottom","header","faculty","years","start","end","description","specialization"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WAAIL,MAAM,CAAC,IAAIM,IAAJ,CAASD,IAAT,CAAD,EAAiB,CAAC,MAAD,CAAjB,CAAV;AAAA,GAAvB;;AACA,MAAME,KAAK,GAAGN,WAAW,EAAzB;AACA,MAAMO,MAAM,GAAGT,YAAY,CAACQ,KAAD,CAA3B;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,GAAL,CAAS,UAACC,MAAD,EAASC,GAAT;AAAA,wBACR,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,MAAM,CAACA,MAApC,CADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,CAACE,OAAP,CAAeH,GAAf,CAAmB,UAACI,MAAD,EAASF,GAAT;AAAA,0BAClB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,GAAX;AAAgB,QAAA,KAAK,EAAE;AAAEG,UAAAA,YAAY,EAAE;AAAhB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWL,MAAM,CAACM,OAAlB,gBAA+BH,MAAM,CAACA,MAAtC,EADF,eAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACW,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+Bf,UAAU,CACvCW,MAAM,CAACI,KAAP,CAAaC,KAD0B,CAAzC,gBAGEL,MAAM,CAACI,KAAP,CAAaE,GAAb,KAAqB,KAArB,GACI,KADJ,GAEIjB,UAAU,CAACW,MAAM,CAACI,KAAP,CAAaE,GAAd,CALhB,EAFF,CADF,eAWE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,MAAM,CAACQ,cAAP,8BACuBR,MAAM,CAACQ,cAD9B,IAEG,IAHN,CAXF,CADkB;AAAA,KAAnB,CADH,CAFF,CADQ;AAAA,GAAT,CADH,CAFF,CADF;AAiCD,CArCD;;AAuCA,eAAerB,SAAf","sourcesContent":["import { Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport createStyles from \"../../styles/pdf/Education\"\nimport { format } from \"date-fns\"\nimport usePdfTheme from \"../../hooks/usePdfTheme\"\n\nconst Education = ({ data }) => {\n  const formatDate = date => format(new Date(date), [\"yyyy\"])\n  const theme = usePdfTheme()\n  const styles = createStyles(theme)\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Education</Text>\n      <View>\n        {data.map((school, idx) => (\n          <View key={idx}>\n            <Text style={styles.school}>{school.school}</Text>\n            <View>\n              {school.degrees.map((degree, idx) => (\n                <View key={idx} style={{ marginBottom: 5 }}>\n                  <View style={styles.header}>\n                    <Text>{` ${school.faculty} - ${degree.degree}`}</Text>\n                    <Text style={styles.years}>{`${formatDate(\n                      degree.years.start,\n                    )} - ${\n                      degree.years.end === \"now\"\n                        ? \"Now\"\n                        : formatDate(degree.years.end)\n                    }`}</Text>\n                  </View>\n                  <Text style={styles.description}>\n                    {degree.specialization\n                      ? `Specialization - ${degree.specialization}`\n                      : null}\n                  </Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nexport default Education\n"]},"metadata":{},"sourceType":"module"}