{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx\";\n\nimport { Text, View } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport createStyles from \"../../styles/pdf/Education\";\n\nvar Education = function Education(_ref) {\n  var data = _ref.data;\n\n  var formatDate = function formatDate(date) {\n    return format(new Date(date), [\"MMM yyyy\"]);\n  };\n\n  var theme = usePdfTheme();\n  var styles = createStyles(theme);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, data.map(function (school, idx) {\n    return /*#__PURE__*/React.createElement(View, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      style: styles.company,\n      href: school.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, school.company), /*#__PURE__*/React.createElement(Text, {\n      style: styles.years,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, \"\".concat(formatDate(school.years.start), \" - \").concat(school.years.end === \"now\" ? \"Now\" : formatDate(school.years.end)))), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, school.tasks.map(function (task, idx) {\n      return /*#__PURE__*/React.createElement(Item, {\n        style: styles.list,\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, task);\n    })));\n  })));\n};\n\nexport default Education;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx"],"names":["Text","View","React","createStyles","Education","data","formatDate","date","format","Date","theme","usePdfTheme","styles","container","heading","map","school","idx","header","company","link","years","start","end","tasks","task","list"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WAAIC,MAAM,CAAC,IAAIC,IAAJ,CAASF,IAAT,CAAD,EAAiB,CAAC,UAAD,CAAjB,CAAV;AAAA,GAAvB;;AACA,MAAMG,KAAK,GAAGC,WAAW,EAAzB;AACA,MAAMC,MAAM,GAAGT,YAAY,CAACO,KAAD,CAA3B;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,CAACU,GAAL,CAAS,UAACC,MAAD,EAASC,GAAT;AAAA,wBACR,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAA6B,MAAA,IAAI,EAAEH,MAAM,CAACI,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,MAAM,CAACG,OADV,CADF,eAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+Bf,UAAU,CACvCU,MAAM,CAACK,KAAP,CAAaC,KAD0B,CAAzC,gBAGEN,MAAM,CAACK,KAAP,CAAaE,GAAb,KAAqB,KAArB,GACI,KADJ,GAEIjB,UAAU,CAACU,MAAM,CAACK,KAAP,CAAaE,GAAd,CALhB,EAJF,CADF,eAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,MAAM,CAACQ,KAAP,CAAaT,GAAb,CAAiB,UAACU,IAAD,EAAOR,GAAP;AAAA,0BAChB,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACc,IAApB;AAA0B,QAAA,GAAG,EAAET,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGQ,IADH,CADgB;AAAA,KAAjB,CADH,CAbF,CADQ;AAAA,GAAT,CADH,CAFF,CADF;AA8BD,CAlCD;;AAoCA,eAAerB,SAAf","sourcesContent":["import { Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport createStyles from \"../../styles/pdf/Education\"\n\nconst Education = ({ data }) => {\n  const formatDate = date => format(new Date(date), [\"MMM yyyy\"])\n  const theme = usePdfTheme()\n  const styles = createStyles(theme)\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Education</Text>\n      <View>\n        {data.map((school, idx) => (\n          <View key={idx}>\n            <View style={styles.header}>\n              <Link style={styles.company} href={school.link}>\n                {school.company}\n              </Link>\n              <Text style={styles.years}>{`${formatDate(\n                school.years.start,\n              )} - ${\n                school.years.end === \"now\"\n                  ? \"Now\"\n                  : formatDate(school.years.end)\n              }`}</Text>\n            </View>\n            <List>\n              {school.tasks.map((task, idx) => (\n                <Item style={styles.list} key={idx}>\n                  {task}\n                </Item>\n              ))}\n            </List>\n          </View>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nexport default Education\n"]},"metadata":{},"sourceType":"module"}