{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider } from \"@react-pdf/renderer\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\";\nimport BasicPDF from \"./components/pdf/Basic\";\nimport data from \"./data/data.js\";\nimport ControlPanel from \"../src/components/pdf/ControlPanel\";\nimport { PdfThemeContext } from \"./hooks/usePdfTheme\";\nimport { theme } from \"./styles/pdf/layout-one/themes\"; // import ThemeContext, { theme } from \"./hooks/usePdfTheme\"\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ControlPanel, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(PdfThemeContext.Provider, {\n  value: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BlobProvider, {\n  document: /*#__PURE__*/React.createElement(BasicPDF, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}, function (_ref) {\n  var blob = _ref.blob,\n      url = _ref.url,\n      loading = _ref.loading,\n      error = _ref.error;\n\n  if (blob) {\n    return /*#__PURE__*/React.createElement(PSPDFKit, {\n      blob: blob,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }\n    });\n  }\n\n  if (error) {\n    return error;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }, \"The PDF is rendering...\");\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","ReactDOM","BlobProvider","PSPDFKit","BasicPDF","data","ControlPanel","PdfThemeContext","theme","render","blob","url","loading","error","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,KAAT,QAAsB,gCAAtB,C,CACA;;AAEAP,QAAQ,CAACQ,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,EAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,eAAE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,gBAAmC;AAAA,MAAhCK,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,GAA0B,QAA1BA,GAA0B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAClC,MAAIH,IAAJ,EAAU;AACR,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIG,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,CAXH,CADF,CAFF,CADF,EAmBEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAnBF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider } from \"@react-pdf/renderer\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\nimport BasicPDF from \"./components/pdf/Basic\"\nimport data from \"./data/data.js\"\nimport ControlPanel from \"../src/components/pdf/ControlPanel\"\nimport { PdfThemeContext } from \"./hooks/usePdfTheme\"\nimport { theme } from \"./styles/pdf/layout-one/themes\"\n// import ThemeContext, { theme } from \"./hooks/usePdfTheme\"\n\nReactDOM.render(\n  <div>\n    <ControlPanel />\n    <PdfThemeContext.Provider value={theme}>\n      <BlobProvider document={<BasicPDF data={data} />}>\n        {({ blob, url, loading, error }) => {\n          if (blob) {\n            return <PSPDFKit blob={blob} />\n          }\n\n          if (error) {\n            return error\n          }\n\n          return <div>The PDF is rendering...</div>\n        }}\n      </BlobProvider>\n    </PdfThemeContext.Provider>\n  </div>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}