{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider } from \"@react-pdf/renderer\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"; // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\";\nimport data from \"./data/data.js\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PdfThemeContext.Provider, {\n  value: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BlobProvider, {\n  document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, function (_ref) {\n  var blob = _ref.blob,\n      url = _ref.url,\n      loading = _ref.loading,\n      error = _ref.error;\n  console.log(\"url:\", url);\n\n  if (blob) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ControlPanel, {\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  if (error) {\n    return error;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }\n  }, \"The PDF is rendering...\");\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","ReactDOM","BlobProvider","Container","Row","Col","PSPDFKit","ColsOneToOne","data","ControlPanel","PdfThemeContext","theme","render","blob","url","loading","error","console","log","display","flexDirection","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,qBAAvC;AACA,OAAO,sCAAP;AAEAV,QAAQ,CAACW,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,EAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,gBAAmC;AAAA,MAAhCK,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,GAA0B,QAA1BA,GAA0B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,GAApB;;AAEA,MAAID,IAAJ,EAAU;AACR,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEZ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CADF;AAYD;;AACD,MAAIQ,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,CAvBH,CADF,CADF,CADF,EA8BEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CA9BF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider } from \"@react-pdf/renderer\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\n// import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\"\nimport data from \"./data/data.js\"\nimport ControlPanel from \"./components/control/ControlPanel\"\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <div>\n    <PdfThemeContext.Provider value={theme}>\n      <BlobProvider document={<ColsOneToOne data={data} />}>\n        {({ blob, url, loading, error }) => {\n          console.log(\"url:\", url)\n\n          if (blob) {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <Container>\n                  <Row>\n                    <Col>\n                      <ControlPanel data={data} />\n                    </Col>\n                    <Col>{/* <PSPDFKit blob={blob} /> */}</Col>\n                  </Row>\n                </Container>\n              </div>\n            )\n          }\n          if (error) {\n            return error\n          }\n\n          return <div>The PDF is rendering...</div>\n        }}\n      </BlobProvider>\n    </PdfThemeContext.Provider>\n  </div>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}