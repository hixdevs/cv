{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\",\n    _this = this;\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider } from \"@react-pdf/renderer\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\";\nimport BasicPDF from \"./components/pdf/Basic\";\nimport \"./styles/page.css\";\n\nvar getData = function getData() {\n  fetch(\"../public/data.json\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }).then(function (response) {\n    console.log(response);\n    return response.json();\n  }).then(function (myJson) {\n    console.log(myJson);\n  });\n};\n\nuseEffect(function () {\n  getData();\n}, []);\nReactDOM.render( /*#__PURE__*/React.createElement(BlobProvider, {\n  document: BasicPDF,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, function (_ref) {\n  var blob = _ref.blob,\n      url = _ref.url,\n      loading = _ref.loading,\n      error = _ref.error;\n\n  if (blob) {\n    return /*#__PURE__*/React.createElement(PSPDFKit, {\n      blob: blob,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (error) {\n    return error;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, \"The PDF is rendering...\");\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","useEffect","ReactDOM","BlobProvider","PSPDFKit","BasicPDF","getData","fetch","headers","Accept","then","response","console","log","json","myJson","render","blob","url","loading","error","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,mBAAP;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,EAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3BC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AADkB,GAAxB,CAAL,CAMGC,IANH,CAMQ,UAAUC,QAAV,EAAoB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,GATH,EAUGJ,IAVH,CAUQ,UAAUK,MAAV,EAAkB;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD,GAZH;AAaD,CAdD;;AAeAd,SAAS,CAAC,YAAM;AACdK,EAAAA,OAAO;AACR,CAFQ,EAEN,EAFM,CAAT;AAIAJ,QAAQ,CAACc,MAAT,eACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,EAAEX,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,gBAAmC;AAAA,MAAhCY,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,GAA0B,QAA1BA,GAA0B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAClC,MAAIH,IAAJ,EAAU;AACR,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIG,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,CAXH,CADF,EAcEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdF","sourcesContent":["import React, { useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider } from \"@react-pdf/renderer\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\nimport BasicPDF from \"./components/pdf/Basic\"\n\nimport \"./styles/page.css\"\nconst getData = () => {\n  fetch(\"../public/data.json\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then(function (response) {\n      console.log(response)\n      return response.json()\n    })\n    .then(function (myJson) {\n      console.log(myJson)\n    })\n}\nuseEffect(() => {\n  getData()\n}, [])\n\nReactDOM.render(\n  <BlobProvider document={BasicPDF}>\n    {({ blob, url, loading, error }) => {\n      if (blob) {\n        return <PSPDFKit blob={blob} />\n      }\n\n      if (error) {\n        return error\n      }\n\n      return <div>The PDF is rendering...</div>\n    }}\n  </BlobProvider>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}