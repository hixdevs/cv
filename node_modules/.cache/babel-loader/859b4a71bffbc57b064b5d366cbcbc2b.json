{"ast":null,"code":"import _defineProperty from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js\";\n\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport InputColor from \"../input/Color\";\nimport { colors } from \"../../../lib/colors\";\nimport { useState } from \"react\";\n\nvar _useState = useState({\n  primary: \"#42413e\",\n  teranry: \"#fafafa\",\n  secondary: \"#c4ad93\",\n  textLight: \"#ffffff\",\n  textDark: \"#222222\",\n  link: \"#54b2ff\"\n}),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n\nexport { theme, setTheme };\n\nvar onChange = function onChange(event) {\n  setTheme(function (prevState) {\n    return _objectSpread({}, prevState, _defineProperty({}, event.target.name, event.target.value));\n  });\n};\n\nvar FormColors = function FormColors() {\n  console.log(\"theme:\", theme);\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, colors.map(function (color, idx) {\n    return /*#__PURE__*/React.createElement(InputColor, {\n      key: idx,\n      name: color.name,\n      defaultValue: color.default,\n      label: color.display,\n      onChange: onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default FormColors;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js"],"names":["React","Form","InputColor","colors","useState","primary","teranry","secondary","textLight","textDark","link","theme","setTheme","onChange","event","prevState","target","name","value","FormColors","console","log","map","color","idx","default","display"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;gBAEiCA,QAAQ,CAAC;AACxCC,EAAAA,OAAO,EAAE,SAD+B;AAExCC,EAAAA,OAAO,EAAE,SAF+B;AAGxCC,EAAAA,SAAS,EAAE,SAH6B;AAIxCC,EAAAA,SAAS,EAAE,SAJ6B;AAKxCC,EAAAA,QAAQ,EAAE,SAL8B;AAMxCC,EAAAA,IAAI,EAAE;AANkC,CAAD,C;;IAA3BC,K;IAAOC,Q;;;;AASrB,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBF,EAAAA,QAAQ,CAAC,UAAAG,SAAS;AAAA,6BACbA,SADa,sBAEfD,KAAK,CAACE,MAAN,CAAaC,IAFE,EAEKH,KAAK,CAACE,MAAN,CAAaE,KAFlB;AAAA,GAAV,CAAR;AAID,CALD;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,KAAtB;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACmB,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR;AAAA,wBACV,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAED,KAAK,CAACN,IAFd;AAGE,MAAA,YAAY,EAAEM,KAAK,CAACE,OAHtB;AAIE,MAAA,KAAK,EAAEF,KAAK,CAACG,OAJf;AAKE,MAAA,QAAQ,EAAEb,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF;AAaD,CAhBD;;AAkBA,eAAeM,UAAf","sourcesContent":["import React from \"react\"\nimport { Form } from \"react-bootstrap\"\nimport InputColor from \"../input/Color\"\nimport { colors } from \"../../../lib/colors\"\nimport { useState } from \"react\"\n\nexport const [theme, setTheme] = useState({\n  primary: \"#42413e\",\n  teranry: \"#fafafa\",\n  secondary: \"#c4ad93\",\n  textLight: \"#ffffff\",\n  textDark: \"#222222\",\n  link: \"#54b2ff\",\n})\n\nconst onChange = event => {\n  setTheme(prevState => ({\n    ...prevState,\n    [event.target.name]: event.target.value,\n  }))\n}\nconst FormColors = () => {\n  console.log(\"theme:\", theme)\n\n  return (\n    <Form>\n      {colors.map((color, idx) => (\n        <InputColor\n          key={idx}\n          name={color.name}\n          defaultValue={color.default}\n          label={color.display}\n          onChange={onChange}\n        />\n      ))}\n    </Form>\n  )\n}\n\nexport default FormColors\n"]},"metadata":{},"sourceType":"module"}