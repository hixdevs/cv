{"ast":null,"code":"import _slicedToArray from \"/Users/olga/Documents/coding/hixdevs/cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js\";\n\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport InputColor from \"../input/Color\";\nimport { colors } from \"../../../lib/colors\";\nimport { useState } from \"react\";\n\nvar FormColors = function FormColors() {\n  var _useState = useState(defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theme = _useState4[0],\n      setTheme = _useState4[1];\n\n  console.log(\"theme:\", theme);\n  console.log(\"color:\", color);\n\n  var onChange = function onChange(event) {\n    setColor(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, colors.map(function (color, idx) {\n    return /*#__PURE__*/React.createElement(InputColor, {\n      key: idx,\n      name: color.name,\n      defaultValue: color.default,\n      display: color.display,\n      onChange: onChange,\n      value: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default FormColors;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/control/form/Colors.js"],"names":["React","Form","InputColor","colors","useState","FormColors","defaultValue","color","setColor","primary","teranry","secondary","textLight","textDark","link","theme","setTheme","console","log","onChange","event","target","value","map","idx","name","default","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACGD,QAAQ,CAACE,YAAD,CADX;AAAA;AAAA,MAChBC,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEGJ,QAAQ,CAAC;AACjCK,IAAAA,OAAO,EAAE,SADwB;AAEjCC,IAAAA,OAAO,EAAE,SAFwB;AAGjCC,IAAAA,SAAS,EAAE,SAHsB;AAIjCC,IAAAA,SAAS,EAAE,SAJsB;AAKjCC,IAAAA,QAAQ,EAAE,SALuB;AAMjCC,IAAAA,IAAI,EAAE;AAN2B,GAAD,CAFX;AAAA;AAAA,MAEhBC,KAFgB;AAAA,MAETC,QAFS;;AAWvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,KAAtB;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBZ,IAAAA,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,MAAM,CAACoB,GAAP,CAAW,UAAChB,KAAD,EAAQiB,GAAR;AAAA,wBACV,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAEjB,KAAK,CAACkB,IAFd;AAGE,MAAA,YAAY,EAAElB,KAAK,CAACmB,OAHtB;AAIE,MAAA,OAAO,EAAEnB,KAAK,CAACoB,OAJjB;AAKE,MAAA,QAAQ,EAAER,QALZ;AAME,MAAA,KAAK,EAAEZ,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF;AAcD,CAhCD;;AAkCA,eAAeF,UAAf","sourcesContent":["import React from \"react\"\nimport { Form } from \"react-bootstrap\"\nimport InputColor from \"../input/Color\"\nimport { colors } from \"../../../lib/colors\"\nimport { useState } from \"react\"\n\nconst FormColors = () => {\n  const [color, setColor] = useState(defaultValue)\n  const [theme, setTheme] = useState({\n    primary: \"#42413e\",\n    teranry: \"#fafafa\",\n    secondary: \"#c4ad93\",\n    textLight: \"#ffffff\",\n    textDark: \"#222222\",\n    link: \"#54b2ff\",\n  })\n\n  console.log(\"theme:\", theme)\n  console.log(\"color:\", color)\n\n  const onChange = event => {\n    setColor(event.target.value)\n  }\n\n  return (\n    <Form>\n      {colors.map((color, idx) => (\n        <InputColor\n          key={idx}\n          name={color.name}\n          defaultValue={color.default}\n          display={color.display}\n          onChange={onChange}\n          value={color}\n        />\n      ))}\n    </Form>\n  )\n}\n\nexport default FormColors\n"]},"metadata":{},"sourceType":"module"}