{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx\";\n\nimport { Text, View, Link } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport createStyles from \"../../styles/pdf/Education\";\nimport List, { Item } from \"./List\";\nimport { format } from \"date-fns\";\nimport usePdfTheme from \"../../hooks/usePdfTheme\";\n\nvar Education = function Education(_ref) {\n  var data = _ref.data;\n\n  var formatDate = function formatDate(date) {\n    return format(new Date(date), [\"MMM yyyy\"]);\n  };\n\n  var theme = usePdfTheme();\n  var styles = createStyles(theme);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Education\"));\n};\n\nexport default Education;","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/components/pdf/Education.jsx"],"names":["Text","View","Link","React","createStyles","List","Item","format","usePdfTheme","Education","data","formatDate","date","Date","theme","styles","container","heading"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,qBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,IAAP,IAAeC,IAAf,QAA2B,QAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WAAIL,MAAM,CAAC,IAAIM,IAAJ,CAASD,IAAT,CAAD,EAAiB,CAAC,UAAD,CAAjB,CAAV;AAAA,GAAvB;;AACA,MAAME,KAAK,GAAGN,WAAW,EAAzB;AACA,MAAMO,MAAM,GAAGX,YAAY,CAACU,KAAD,CAA3B;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AA8BD,CAlCD;;AAoCA,eAAeR,SAAf","sourcesContent":["import { Text, View, Link } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport createStyles from \"../../styles/pdf/Education\"\nimport List, { Item } from \"./List\"\nimport { format } from \"date-fns\"\nimport usePdfTheme from \"../../hooks/usePdfTheme\"\n\nconst Education = ({ data }) => {\n  const formatDate = date => format(new Date(date), [\"MMM yyyy\"])\n  const theme = usePdfTheme()\n  const styles = createStyles(theme)\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Education</Text>\n      {/* <View>\n        {data.map((school, idx) => (\n          <View key={idx}>\n            <View style={styles.header}>\n              <Link style={styles.company} href={school.link}>\n                {school.company}\n              </Link>\n              <Text style={styles.years}>{`${formatDate(\n                school.years.start,\n              )} - ${\n                school.years.end === \"now\"\n                  ? \"Now\"\n                  : formatDate(school.years.end)\n              }`}</Text>\n            </View>\n            <List>\n              {school.tasks.map((task, idx) => (\n                <Item style={styles.list} key={idx}>\n                  {task}\n                </Item>\n              ))}\n            </List>\n          </View> */}\n      {/* ))} */}\n      {/* </View> */}\n    </View>\n  )\n}\n\nexport default Education\n"]},"metadata":{},"sourceType":"module"}