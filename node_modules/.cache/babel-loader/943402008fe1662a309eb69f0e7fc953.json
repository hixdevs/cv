{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; // import { BlobProvider } from \"@react-pdf/renderer\"\n// import { Container, Row, Col } from \"react-bootstrap\"\n// import PSPDFKit from \"./components/pdf/PSPDFKit\"\n// // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// // import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n// import ColsOneToOne from \"./components/pdf/ColsOneToOne\"\n// import data from \"./data/data.js\"\n// import ControlPanel from \"./components/control/ControlPanel\"\n// import { PdfThemeContext, theme } from \"./hooks/usePdfTheme\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}), // <div>\n//   <PdfThemeContext.Provider value={theme}>\n//     <BlobProvider document={<ColsOneToOne data={data} />}>\n//       {({ blob, url, loading, error }) => {\n//         if (blob) {\n//           return (\n//             <Container fluid=\"xxl\">\n//               <Row>\n//                 <Col>\n//                   <ControlPanel data={data} />\n//                 </Col>\n//                 <Col>\n//                   <PSPDFKit blob={blob} />\n//                 </Col>\n//               </Row>\n//             </Container>\n//           )\n//         }\n//         if (error) {\n//           return error\n//         }\n//         return <div>The PDF is rendering...</div>\n//       }}\n//     </BlobProvider>\n//   </PdfThemeContext.Provider>\n// </div>,\ndocument.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,sCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEAD,QAAQ,CAACE,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CA7BF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\n// import { BlobProvider } from \"@react-pdf/renderer\"\n// import { Container, Row, Col } from \"react-bootstrap\"\n// import PSPDFKit from \"./components/pdf/PSPDFKit\"\n// // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// // import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n// import ColsOneToOne from \"./components/pdf/ColsOneToOne\"\n// import data from \"./data/data.js\"\n// import ControlPanel from \"./components/control/ControlPanel\"\n// import { PdfThemeContext, theme } from \"./hooks/usePdfTheme\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  // <div>\n  //   <PdfThemeContext.Provider value={theme}>\n  //     <BlobProvider document={<ColsOneToOne data={data} />}>\n  //       {({ blob, url, loading, error }) => {\n  //         if (blob) {\n  //           return (\n  //             <Container fluid=\"xxl\">\n  //               <Row>\n  //                 <Col>\n  //                   <ControlPanel data={data} />\n  //                 </Col>\n  //                 <Col>\n  //                   <PSPDFKit blob={blob} />\n  //                 </Col>\n  //               </Row>\n  //             </Container>\n  //           )\n  //         }\n  //         if (error) {\n  //           return error\n  //         }\n\n  //         return <div>The PDF is rendering...</div>\n  //       }}\n  //     </BlobProvider>\n  //   </PdfThemeContext.Provider>\n  // </div>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}