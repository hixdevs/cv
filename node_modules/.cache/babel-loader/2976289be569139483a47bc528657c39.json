{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Documents/coding/hixdevs/cv/src/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BlobProvider } from \"@react-pdf/renderer\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"; // import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\n\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\";\nimport data from \"./data/data.js\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import App from \"./App\"\n\nimport { useState } from \"react\"; // const App = () => {\n//   const [theme, setTheme] = useState({\n//     primary: \"#42413e\",\n//     teranry: \"#fafafa\",\n//     secondary: \"#c4ad93\",\n//     textLight: \"#ffffff\",\n//     textDark: \"#222222\",\n//     link: \"#54b2ff\",\n//   })\n//   const onChange = event => {\n//     setTheme(prevState => ({\n//       ...prevState,\n//       [event.target.name]: event.target.value,\n//     }))\n//     console.log(\"theme:\", theme)\n//   }\n//   return (\n//     <div>\n//       <PdfThemeContext.Provider value={theme}>\n//         <BlobProvider document={<ColsOneToOne data={data} />}>\n//           {({ blob, url, loading, error }) => {\n//             if (blob) {\n//               return (\n//                 <Container fluid=\"xxl\">\n//                   <Row>\n//                     <Col>\n//                       <ControlPanel data={data} onChange={onChange} />\n//                     </Col>\n//                     <Col>\n//                       <PSPDFKit blob={blob} />\n//                     </Col>\n//                   </Row>\n//                 </Container>\n//               )\n//             }\n//             if (error) {\n//               return error\n//             }\n//             return <div>The PDF is rendering...</div>\n//           }}\n//         </BlobProvider>\n//       </PdfThemeContext.Provider>\n//     </div>\n//   )\n// }\n\nReactDOM.render(\n/*#__PURE__*/\n// <App />,\nReact.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PdfThemeContext.Provider, {\n  value: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BlobProvider, {\n  document: /*#__PURE__*/React.createElement(ColsOneToOne, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}, function (_ref) {\n  var blob = _ref.blob,\n      url = _ref.url,\n      loading = _ref.loading,\n      error = _ref.error;\n\n  if (blob) {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: \"xxl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ControlPanel, {\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PSPDFKit, {\n      blob: blob,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  if (error) {\n    return error;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }\n  }, \"The PDF is rendering...\");\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/olga/Documents/coding/hixdevs/cv/src/index.js"],"names":["React","ReactDOM","BlobProvider","Container","Row","Col","PSPDFKit","ColsOneToOne","data","ControlPanel","PdfThemeContext","theme","useState","render","blob","url","loading","error","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,qBAAvC;AACA,OAAO,sCAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,QAAQ,CAACY,MAAT;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,EAAA,KAAK,EAAEF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,gBAAmC;AAAA,MAAhCM,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,GAA0B,QAA1BA,GAA0B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAClC,MAAIH,IAAJ,EAAU;AACR,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEN,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEM,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,CADF;AAYD;;AACD,MAAIG,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,CArBH,CADF,CADF,CAFF,EA6BEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CA7BF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BlobProvider } from \"@react-pdf/renderer\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport PSPDFKit from \"./components/pdf/PSPDFKit\"\n// import ColsOneToTwo from \"./components/pdf/ColsOneToTwo\"\n// import ColsTwoToOne from \"./components/pdf/ColsTwoToOne\"\nimport ColsOneToOne from \"./components/pdf/ColsOneToOne\"\nimport data from \"./data/data.js\"\nimport ControlPanel from \"./components/control/ControlPanel\"\nimport { PdfThemeContext, theme } from \"./hooks/usePdfTheme\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n// import App from \"./App\"\nimport { useState } from \"react\"\n\n// const App = () => {\n//   const [theme, setTheme] = useState({\n//     primary: \"#42413e\",\n//     teranry: \"#fafafa\",\n//     secondary: \"#c4ad93\",\n//     textLight: \"#ffffff\",\n//     textDark: \"#222222\",\n//     link: \"#54b2ff\",\n//   })\n\n//   const onChange = event => {\n//     setTheme(prevState => ({\n//       ...prevState,\n//       [event.target.name]: event.target.value,\n//     }))\n//     console.log(\"theme:\", theme)\n//   }\n\n//   return (\n//     <div>\n//       <PdfThemeContext.Provider value={theme}>\n//         <BlobProvider document={<ColsOneToOne data={data} />}>\n//           {({ blob, url, loading, error }) => {\n//             if (blob) {\n//               return (\n//                 <Container fluid=\"xxl\">\n//                   <Row>\n//                     <Col>\n//                       <ControlPanel data={data} onChange={onChange} />\n//                     </Col>\n//                     <Col>\n//                       <PSPDFKit blob={blob} />\n//                     </Col>\n//                   </Row>\n//                 </Container>\n//               )\n//             }\n//             if (error) {\n//               return error\n//             }\n\n//             return <div>The PDF is rendering...</div>\n//           }}\n//         </BlobProvider>\n//       </PdfThemeContext.Provider>\n//     </div>\n//   )\n// }\nReactDOM.render(\n  // <App />,\n  <div>\n    <PdfThemeContext.Provider value={theme}>\n      <BlobProvider document={<ColsOneToOne data={data} />}>\n        {({ blob, url, loading, error }) => {\n          if (blob) {\n            return (\n              <Container fluid=\"xxl\">\n                <Row>\n                  <Col>\n                    <ControlPanel data={data} />\n                  </Col>\n                  <Col>\n                    <PSPDFKit blob={blob} />\n                  </Col>\n                </Row>\n              </Container>\n            )\n          }\n          if (error) {\n            return error\n          }\n\n          return <div>The PDF is rendering...</div>\n        }}\n      </BlobProvider>\n    </PdfThemeContext.Provider>\n  </div>,\n  document.getElementById(\"root\"),\n)\n"]},"metadata":{},"sourceType":"module"}